package per.iys.crm.workbench.mapper;

import org.apache.ibatis.annotations.Mapper;
import per.iys.crm.workbench.domain.ActivityRemark;

import java.util.List;

@Mapper
public interface ActivityRemarkMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity_remark
     *
     * @mbg.generated Tue May 03 15:32:39 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity_remark
     *
     * @mbg.generated Tue May 03 15:32:39 CST 2022
     */
    int insert(ActivityRemark row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity_remark
     *
     * @mbg.generated Tue May 03 15:32:39 CST 2022
     */
    int insertSelective(ActivityRemark row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity_remark
     *
     * @mbg.generated Tue May 03 15:32:39 CST 2022
     */
    ActivityRemark selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity_remark
     *
     * @mbg.generated Tue May 03 15:32:39 CST 2022
     */
    int updateByPrimaryKeySelective(ActivityRemark row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity_remark
     *
     * @mbg.generated Tue May 03 15:32:39 CST 2022
     */
    int updateByPrimaryKey(ActivityRemark row);

    /**
     * 根据activity的id获取市场活动明细信息.
     *
     * @param activityId 市场活动的id
     * @return 市场活动明细信息.
     */
    List<ActivityRemark> selectActivityRemarkForDetailByActivityId(String activityId);

    /**
     * 保存创建的市场活动备注
     *
     * @param activityRemark 市场活动备注
     * @return 成功插入的记录条数
     */
    int insertActivityRemark(ActivityRemark activityRemark);

    /**
     * 根据ID删除市场活动备注
     *
     * @param id 市场活动备注id
     * @return 成功删除的记录条数
     */
    int deleteActivityRemarkById(String id);

    /**
     * 根据id修改市场活动备注
     *
     * @param activityRemark 市场活动备注信息
     * @return 成功操作的记录条数 1为成功 0为失败
     */
    int updateActivityRemark(ActivityRemark activityRemark);
}