package per.iys.crm.workbench.mapper;

import org.apache.ibatis.annotations.Mapper;
import per.iys.crm.workbench.domain.Customer;

import java.util.List;
import java.util.Map;

@Mapper
public interface CustomerMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbg.generated Fri Jun 17 15:24:12 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbg.generated Fri Jun 17 15:24:12 CST 2022
     */
    int insert(Customer row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbg.generated Fri Jun 17 15:24:12 CST 2022
     */
    int insertSelective(Customer row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbg.generated Fri Jun 17 15:24:12 CST 2022
     */
    Customer selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbg.generated Fri Jun 17 15:24:12 CST 2022
     */
    int updateByPrimaryKeySelective(Customer row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbg.generated Fri Jun 17 15:24:12 CST 2022
     */
    int updateByPrimaryKey(Customer row);

    /**
     * 保存创建的客户
     *
     * @param customer
     * @return
     */
    int insertCustomer(Customer customer);

    /**
     * 根据条件分页查询客户
     *
     * @param map key: customer, beginNo, pageSize
     * @return
     */
    List<Customer> selectCustomerByConditionForPage(Map<String, Object> map);

    /**
     * 根据条件查询客户总记录条数
     *
     * @param map key: customer, beginNo, pageSize
     * @return
     */
    int selectCountOfCustomerByCondition(Map<String, Object> map);

    /**
     * 根据多条id删除客户
     *
     * @param ids
     * @return
     */
    int deleteCustomerByIds(String[] ids);

    /**
     * 根据id查询客户
     *
     * @param id
     * @return
     */
    Customer selectCustomerById(String id);

    /**
     * 根据id更新客户
     *
     * @param customer
     * @return
     */
    int updateCustomerById(Customer customer);
}